---
import {type Format, checkIODirection, type Direction, formats } from '../content/lib/formats.ts';
import type { HTMLAttributes } from 'astro/types';
import {type Type} from '../content/lib/parameters.ts';


interface Props extends HTMLAttributes<'div'> {
  of: keyof typeof formats;
  direction: Direction,
}

const {of, direction } = Astro.props;

const format: Format = formats[of];
---
{checkIODirection(format,direction) && format.parameters.map((param) => ( 
  <tr>
    <td class="parameter-item text-sm leading-relaxed">
        <u><code>{param.name}</code></u><br />
        <span set:html={param.description}></span><br />
        <span>Accepted type(s): {param.types.map((type: Type) => type.description).join(', ') }</span><br />
        {param.example ? <span> Example: <code>{param.example}</code></span> : null}
    </td>
  </tr>
))}

