name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build-with-nix:
    name: "Build nix package"
    runs-on: ubuntu-latest
    concurrency:
      group: "build-nix"
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nemo-nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 2.5G
          purge: true
          purge-prefixes: nemo-nix-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
      - run: nix --print-build-logs build .#nemo-doc

  check-links:
    name: "Check for broken links"
    runs-on: ubuntu-latest
    concurrency:
      group: "check-links"
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v12
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nemo-nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 2.5G
          purge: true
          purge-prefixes: nemo-nix-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
      - run: nix --print-build-logs run .#check-links
